package main

import "text/template"

type apiopData struct {
	Description           string
	ShortDescription      string
	Nickname              string
	HttpMethod            string
	Path                  string
	PathParameters        string
	QueryAndHeaderCalls   string
	ParametersDeclaration string
	ApiName               string
}

var apiopHeader = template.Must(template.New("apiopHeader").Parse(`
// DO NOT EDIT!
//
// This file contains functions to compose new Test functions.
// Additional such functions should be defined in your own file(s).
//
// Code generated by forestgen <https://github.com/emicklei/forestgen> on {{.Today}} from {{.Source}}
//
// DO NOT EDIT!

package main

import (
	"net/http"

	. "github.com/emicklei/forest"
)`))

var apiopTemplate = template.Must(template.New("apiopTemplate").Parse(`
/* 
{{.Description}}
*/
func {{.Nickname}}(t T{{.ParametersDeclaration}}) *http.Response {
	t.Logf(Scolorf("@{g}", "{{.ShortDescription}}"))
	cfg := DefaultConfig("{{.Path}}"{{.PathParameters}}){{.QueryAndHeaderCalls}}
	return {{.ApiName}}.{{.HttpMethod}}(t, cfg)
}
`))
